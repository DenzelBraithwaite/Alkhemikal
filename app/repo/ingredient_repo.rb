require_relative '../models/ingredient'

class IngredientRepo
    attr_reader :good_ingredients, :bad_ingredients
    attr_accessor :all_ingredients

    def initialize
        # Array of all items that can be found while exploring.
        @all_ingredients = [
            # "alcohol",
            # "ashwinder eggs",
            # "arcana rocks",
            # "avocado",
            # "beetle eye",
            # "billywig stinger",
            # "bitter root",
            # "blood",
            # "caterpillar",
            # "chicken lips",
            # "cockroach",
            # "chess pawn",
            # "death cap",
            # "crowbane",
            # "dragon dung",
            # "snake skin",
            # "fluxweed",
            # "griffin claw",
            # "gargoyle scale",
            # "hermit crab shell",
            # "horned slug",
            # "horse hair",
            # "kelp",
            # "lizard's leg",
            # "newt spleen",
            # "pearl dust",
            # "plantain",
            # "dead puffer fish",
            # "rat tail",
            # "snake fang",
            # "salt",
            # "spiders",
            # "frog's toe",
            # "wolf tooth",
            # "turtle",
            # "wormwood",
            # "aconite",
            # "bat spleen",
            # "unicorn urine",
            # "iguana blood",
            # "ink",
            # "small bones",
            # "cat hair",
            # "crocodile heart",
            # "dragon claw",
            # "owl feather",
            # "assorted eyeballs",
            # "fairy wing",
            # "frog brain",
            # "ginger",
            # "rubies",
            # "lavender",
            # "leech juice",
            # "mandrake",
            # "moonstone",
            # "mushrooms",
            # "newt oil",
            # "octopus powder",
            # "pickled slugs",
            # "pixie wings",
            # "ogre toenail",
            # "silver",
            # "sage",
            # "star grass",
            # "tongue of dog",
            # "tarot cards",
            # "toadstools",
            # # "water", not sure if I want player to find water, since they start with it.
            # "wizard's beard hairs",
            # "gorgon tears",
            # "cyclops sweat",
            # "ancient dust",
            # "rose petals",
            "damaged recipe: #{"Witch's Brew".cyan} => ['#{"cat hair".light_cyan}', 'b-']",
            "damaged recipe: #{"Warlock's Brew".cyan} => ['#{"frog brain".light_cyan}', 't---u- -- d--']",
            "\n\n#{"Kᴀᴢ's Jᴏᴜʀɴᴀʟ:".black.on_cyan}\n #{"Year:".cyan} 1743\n #{"Moon:".cyan} Garnet,\n\n#{"It reads:".cyan} ℐ'𝓋ℯ 𝒶𝓁𝓂ℴ𝓈𝓉 𝒻𝒾ℊ𝓊𝓇ℯ𝒹 𝒾𝓉 ℴ𝓊𝓉... 𝓉𝒽ℯ #{"𝒱𝒾𝓁ℯ ℴ𝒻 𝒜𝓂ℴ𝓇𝓉ℯ𝓃𝓉𝒾𝒶".light_red}. ℐ'𝓋ℯ 𝓉𝓇𝒾ℯ𝒹 𝒶𝓃𝒹 𝒻𝒶𝒾𝓁ℯ𝒹 𝓈ℴ 𝓂𝒶𝓃𝓎 𝓉𝒾𝓂ℯ𝓈,
            𝒷𝓊𝓉 𝓉𝒽𝒾𝓈 𝓂ℴℴ𝓃 𝓌𝒾𝓁𝓁 𝒷ℯ 𝒹𝒾𝒻𝒻ℯ𝓇ℯ𝓃𝓉.\n ℐ'𝓋ℯ 𝒹𝒾𝓈𝒸ℴ𝓋ℯ𝓇ℯ𝒹 𝓉𝒽𝒶𝓉 𝓉𝒽ℯ 𝓀ℯ𝓎 𝒾𝓃ℊ𝓇ℯ𝒹𝒾ℯ𝓃𝓉 𝒾𝓈𝓃'𝓉 𝒶𝓃 𝒾𝓃ℊ𝓇ℯ𝒹𝒾ℯ𝓃𝓉 𝒶𝓉 𝒶𝓁𝓁, 𝒾𝓉'𝓈 𝒶 #{"𝓅ℴ𝓉𝒾ℴ𝓃!!".light_cyan}
            ℐ𝓃 𝒻𝒶𝒸𝓉 𝒶𝓁𝓁 𝓉𝒽ℯ 𝒾𝓃ℊ𝓇ℯ𝒹𝒾ℯ𝓃𝓉𝓈 𝒶𝓇ℯ 𝓅ℴ𝓉𝒾ℴ𝓃𝓈.\n 𝒯𝒽𝒾𝓈 𝒾𝓈 𝓂𝓎 𝒽𝓎𝓅ℴ𝓉𝒽ℯ𝓈𝒾𝓈, 𝒾𝒻 𝓎ℴ𝓊 𝒸ℴ𝓂𝒷𝒾𝓃ℯ 𝓉𝒽ℯ ℬ𝓇ℯ𝓌 ℴ𝒻 𝓋𝒾𝓈𝒾ℴ𝓃𝓈 #{"𝓌-".black.on_light_red}"
        ]
        # Array of good ingredients found while exploring
        @good_ingredients = [
            "aconite",
            "ashwinder eggs",
            "arcana rocks",
            "bat spleen",
            "chess pawn",
            "unicorn urine",
            "iguana blood",
            "ink",
            "small bones",
            "cat hair",
            "crocodile heart",
            "dragon claw",
            "owl feather",
            "assorted eyeballs",
            "fairy wing",
            "frog brain",
            "ginger",
            "gargoyle scale",
            "rubies",
            "lavender",
            "leech juice",
            "mandrake",
            "moonstone",
            "mushrooms",
            "newt oil",
            "octopus powder",
            "pickled slugs",
            "pixie wings",
            "ogre toenail",
            "silver",
            "sage",
            "star grass",
            "tarot cards",
            "tongue of dog",
            "toadstools",
            "wizard's beard hairs",
            "gorgon tears",
            "cyclops sweat",
            "ancient dust",
            "rose petals"
        ]
        # Array of good ingredients found while exploring
        @bad_ingredients = [
            "alcohol",
            "avocado",
            "beetle eye",
            "billywig stinger",
            "bitter root",
            "blood",
            "caterpillar",
            "chicken lips",
            "cockroach",
            "death cap",
            "crowbane",
            "dragon dung",
            "snake skin",
            "fluxweed",
            "griffin claw",
            "hermit crab shell",
            "horned slug",
            "horse hair",
            "kelp",
            "lizard's leg",
            "newt spleen",
            "pearl dust",
            "plantain",
            "dead puffer fish",
            "rat tail",
            "snake fang",
            "salt",
            "spiders",
            "frog's toe",
            "wolf tooth",
            "turtle",
            "spectacles",
            "wormwood",
            "photo of Elisa",
            "broken glass",
            "water",
            "zephyr extract",
            "damaged pipe",
            "fractured vape",
            "special grass",
            "damaged recipe: Witch's Brew => ['cat hair', 'b-']",
            "damaged recipe: Warlock's Brew => ['frog brain', 't---u- -- d--']",
            "\nKaz's journal:\n Year - 1743\n Moon: Garnet,\nIt reads: I've almost figured it out... the vial or Amortentia. I've tried and failed so many times,
            but this moon will be different.\n I've discovered that the key ingredient isn't an ingredient at all, it's a potion!!
            In fact all the ingredients are potions.\n This is my hypothesis, if you combine the Brew of visions w-"
        ]
    end
end
